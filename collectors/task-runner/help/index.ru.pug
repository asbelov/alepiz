//
    Copyright © 2020. Alexander Belov. Contacts: <asbel@alepiz.com>
    Created on 2020-5-16 19:37:53
doctype
html(lang="ru" xml:lang="ru" xmlns="http://www.w3.org/1999/xhtml")
    head
        title Task runner: автоматизация процессов - используется для запуска задачи
        link(rel='stylesheet', href='/materialize-css/dist/css/materialize.css')
        link(rel='stylesheet', href='/material-design-icons/material-icons.css')
        meta(name="viewport" content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no')
        meta(name="author" content="Alexander Belov <asbel@alepiz.com>")
        script(src='/materialize-css/dist/js/materialize.js')
        script(src='/javascripts/help.js')
    body
        header
            div.row
                div.col.s12.m10.offset-m1
                    h1 Task runner
                    h5.light.
                        Предназначен для запуска указанной задачи
        main
            div.row
                div.col.s12.m10.offset-m1
                    h3 Описание Task runner
                    p.
                        Сборщик используется для автоматизации различных процессов. Он запускает задачу. В параметрах
                        действий задачи можно использовать переменные, которые определены в текущем счетчике или в
                        родительских счетчиках. Перед запуском задачи переменные будут заменены на их значения.
                    h3 Параметры
                    ul.browser-default
                        li.
                            Task ID (you can find this information in "Task maker" action) - идентификатор задачи.
                            Его можно посмотреть в действии Task maker, перед названием задачи. Он записан в формате
                            #&lt;ID&gt;
                    h3 Возвращаемое значение
                    p.
                        Сборщик возвращает объект, преобразованный в строку и содержащий результаты выполнения каждого
                        действия в задаче в формате
                    pre.
                        {
                            "&lt;serverAddress1&gt;:&lt;serverPort1&gt;": {
                                "&lt;actionID1&gt;:&lt;taskActionID1&gt;":&lt;value1&gt;,
                                "&lt;actionID2&gt;:&lt;taskActionID2&gt;":&lt;value2&gt;, ...
                            },
                            "&lt;serverAddress2&gt;:&lt;serverPort2&gt;": {
                                "&lt;actionID1&gt;:&lt;taskActionID1&gt;":&lt;value1&gt;,
                                "&lt;actionID2&gt;:&lt;taskActionID2&gt;":&lt;value2&gt;, ...
                            },....
                        }
                    p где:
                    ul.browser-default
                        li.
                            &lt;serverAddress1&gt;:&lt;serverPort1&gt; - serverAddress и serverPort сервера,
                            от которого пришли данные
                        ul.browser-default
                            li.
                                actionID - идентификатор действия (название каталога действия)
                            li.
                                taskActionID - идентификатор действия из таблицы БД db.db
                            li.
                                tasksActions, а в качестве значения value - значение, возвращаемое действием.
                    p Например:
                    pre.
                        {
                            "192.168.1.1:10166": {
                                "objects_creator:158":"204591",
                                "objects_properties:159":"59968",
                                "objects_properties:160":"59969"
                            },{
                            "192.168.100.1:10166": {
                                "objects_creator:158":"304591",
                                "objects_properties:159":"69968",
                                "objects_properties:160":"69969"
                            }
                        }