//
    Copyright © 2022. Alexander Belov. Contacts: <asbel@alepiz.com>
doctype
html(lang="ru" xml:lang="ru" xmlns="http://www.w3.org/1999/xhtml")
    head
        title Настройки сервера асинхронного логирования log.json
        link(rel='stylesheet', href='/materialize-css/dist/css/materialize.css')
        link(rel='stylesheet', href='/material-design-icons/material-icons.css')
        meta(name="viewport" content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no')
        meta(name="author" content="Alexander Belov &lt;asbel@alepiz.com&gt")
        script(src='/materialize-css/dist/js/materialize.js')
        script(src='/javascripts/help.js')
    body
        header
            div.row
                div.col.s12.m10.offset-m1
                    h1 Описание настроек для сервера логирования log.json
        main
            div.row
                div.col.s12.m10.offset-m1
                    h3 Описание системы логирования
                    p.
                        Система логирования запускается как отдельный поток и принимает сетевые подключения клиентов,
                        который в свою очередь передают ей данные для логирования. Система пытается сортировать полученные
                        сообщения по времени до тех пор, пока они находятся в кэше.
                        Но если сообщение уже было записано в файл, следующее сообщение записывается после него, даже если
                        у предыдущего метка времени была больше, чем у текущего сообщения могут быть записаны в лог
                    p.
                        Для настройки возможности логирования в модуле .js, первой строкой файла необходимо прописать
                        подключение к модулю логирования const log = require('../lib/log')(module);. Это необходимо
                        для корректного вычисления имени файла .js, из которого производится логирование. Для логирования
                        можно использовать функции ниже. Количество параметров, переданных в функцию логирования
                        не ограничено. Тип параметров может быть любой, сервер логирования попытается преобразовать
                        все переданные параметры к текстовому типу, удобному для чтения.
                    h4 Формат данных в лог файлах
                    p.
                        <b>&lt;date&gt; &lt;time&gt;[&lt;dirs:&lt;file&gt;:</b>[<b>&lt;TID&gt;:</b>]<b>&lt;PID&gt;] &lt;logLevel&gt;: &lt;logMessage&gt;</b>
                    ul.browser-default
                        li &lt;date&gt; - дата (месяц и день). Устанавливает функция логирования
                        li &lt;time&gt; - время в миллисекундах. Устанавливает функция логирования
                        li.
                            &lt;dirs&gt; - каталоги относительно корневого каталога ALEPIZ до файла .js из которого запущена
                            функция логирования.
                        li &lt;file&gt; - файл .js без расширения из которого была запущена функция логирования
                        li &lt;TID&gt; - если функция логирования запущена из потока, то Thread ID
                        li &lt;PID&gt; - идентификатор процесса в ОС (Process ID)
                        li &lt;logLevel&gt; - уровень логирования для сообщения (S, D, I, W, E, EXIT)
                        li &lt;logMessage&gt; - сообщение, переданное в функцию логирования
                    p Например:
                    pre.
                        2.08 13:32:23.292[server:counterProcessorServer:1:1584] I: Starting 10 children for server: connect,constant,Jav... CPU cores number: 8, servers number: 1
                    h4 Функции логирования
                    ul.browser-default
                        li.
                            log.silly(), log.debug(), log.info(), log.warn(), log.error() - используются для
                            записи данных в лог файл с соответствующим уровнем логирования.
                        li.
                            log.exit() - используется для записи информации с максимальным приоритетом в файл exit.log
                            при выходе.
                        li.
                            log.throw() - для записи информации и дальнейшем выходе из программы.
                        li.
                            log.options(&lt;options&gt;, logData,....) - для передачи параметров в функцию логирования в виде
                            { level: &lt;log level&gt;, filenames: [&lt;file name1&gt;, ...], keepLineBreaks: &lt;true|false&gt; }
                        li.
                            log.row(logLevel, arrayOfLogData, nodejsModule, options) - для записи данных в лог файл в
                            ручном режиме.
                    h4 Настройки сервера логирования
                    ul.browser-default
                        li localAddress - IP адрес к которому будет привязан сервер логирования. По умолчанию 127.0.0.1.
                        li.
                            serverAddress - IP адрес, к которому будут подключаться клиенты для логирования.
                            По умолчанию 127.0.0.1.
                        li.
                            serverPort - TCP порт, который будет слушать сервер и к которому будут подключаться клиенты
                            для логирования. По умолчанию 10161.
                        li.
                            dir - Каталог для лог файлов. По умолчанию logs. Если каталог не существует, при запуске сервиса
                            он будет создан автоматически.
                        li.
                            maxSocketErrorsCnt - максимальное количество ошибок сокета, после которого сервер будет
                            остановлен. По умолчанию 10000.
                        li.
                            topDirName - каталог верхнего уровня, в котором установлен ALEPIZ. Если не указан, каталог будет
                            определен автоматически. Служит для создания меток с именами файлов в файле с логом.
                        li.
                            logLevel - максимальный уровень логирования для вывода сообщений в log файлы. Может быть
                            S - log.silly(), D - log.debug(), I - log.info(), W - log.warn(), E - log.error().
                            По умолчанию I.
                        li.
                            logToConsole - (true|false) выводить или не выводить сообщения на консоль по умолчанию.
                            По умолчанию false.
                        li.
                            maxMessageLengthForDebug - максимальная длина сообщения для функция log.debug() и log.silly()
                            для вывода в лог файл. Если длина сообщения будет больше, сообщение будет обрезано.
                            По умолчанию 4096.
                        li.
                            alwaysLogToConsoleIfLogLevelMoreThen - всегда выводить сообщения на консоль, если уровень
                            логирования сообщений больше установленного. По умолчанию E.
                        li.
                            file - Имя файла для логирования по умолчанию, если не настроено логирование в другой файл.
                            По умолчанию log.log
                        li.
                            exitLogFileName - имя лог файла в который будут записываться сообщения при штатном или
                            аварийном выходе функцией log.exit(). Запись этой функцией происходит без использования сервера
                            логирования максимально быстро, что позволяет не терять информацию. По умолчанию exit.log.
                        li.
                            daysToKeepLogs - количество дней для хранения логов при их ежедневной ротации. По умолчанию 2
                        li.
                            auditDB - путь до базы данных с информацией по выполняемым пользователями действиям.
                            По умолчанию db/audit.tsv. Используется для вывода информации о выполненных действиях
                            в Веб интерфейсе ALEPIZ.
                        li.
                            logToDatabase - (true|false) выводить или не выводить все сообщения по умолчанию в auditDB.
                            По умолчанию false.
                        li.
                            auditRecordSize - максимальная длина строки в файле auditDB. В файле все строки одинаковой
                            длины для ускорения поиска. По умолчанию 4096. Сообщения длиннее максимальной длины строки
                            будут обрезаться
                        li.
                            maxRecordsReturnedFromDatabase - максимальное количество записей, которые могут быть
                            возвращены в Веб интерфейс пользователя при просмотре лога о результате выполненного
                            действия. По умолчанию 100.
                        li.
                            maxRecordsReturnedFromBrowserForOneSession - количество записей, которые могут быть
                            возвращены в Веб интерфейс пользователя при выполнении
                            действием ajax.js или server.js. По умолчанию 50.
                        li.
                            databaseLogLevel - максимальный уровень логирования сообщений в базу auditDB. Ниже этого
                             уровня сообщения не будут попадать в auditDB и отображаться в Веб интерфейсе.
                             По умолчанию I.

                        p.
                            Если параметр является объектом, сервер считает что это настройка для логирования
                            по файлам .js, которые используют функции логирования. Например, объект
                            "lib": {"log": {"logToDatabase": false, "file": "logServer.log"}} позволит выводить в лог
                            файл logServer.log логирование из файла lib\log.js. Логирование в auditDB при этом не будет.
                            Или объект "server": {"file": "server.log"} - позволит выводить в файл server.log логирование
                            всех файлов, использующих функции логирования и находящихся в каталоге server\.
                            Если для файла .js не описана настройка
                            логирования, а в файле применяется функция логирования, логирование будет производится в
                            файл из настройки file, по умолчанию log.log.
                            Ниже перечислены параметры объектов:
                        ul.browser-default
                            li file - имя файла в который будет производится логирование для указанного модуля .js
                            li.
                                logToConsole - (true|false) выводить или не выводить сообщения на консоль.
                                Умолчание в зависимости от глобальной настройки logToConsole
                            li.
                                logToDatabase - (true|false) выводить или не выводить сообщения в auditDB.
                                Умолчание в зависимости от глобальной настройки logToDatabase




