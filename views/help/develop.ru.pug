//
    Copyright © 2020. Alexander Belov. Contacts: <asbel@alepiz.com>
    Created on 2020-5-8 22:48:12
doctype
html(lang="ru" xml:lang="ru" xmlns="http://www.w3.org/1999/xhtml")
    head
        title Информация для разработчиков и администраторов
        link(rel='stylesheet', href='/materialize-css/dist/css/materialize.css')
        link(rel='stylesheet', href='/material-design-icons/material-icons.css')
        meta(name="viewport" content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no')
        meta(name="author" content="Alexander Belov &lt;asbel@alepiz.com&gt")
        script(src='/materialize-css/dist/js/materialize.js')
        script(src='/javascripts/help.js')
    body
        header
            div.row
                div.col.s12.m10.offset-m1
                    h1 Информация для разработчиков и администраторов ALEPIZ
        main
            div.row
                div.col.s12.m10.offset-m1
                    h2 Описание системы
                    p.
                        ALEPIZ написан на языке JavaScript. С серверной стороны используется nodejs.
                        Для распараллеливания вычислений используются дочерние процессы и потоки.
                        Процессы взаимодействуют между собой через протокол TCP/IP.
                    p.
                        В качестве базы данных используется встраиваемая база
                        #[a(href="https://www.sqlite.org/" target="_blank") sqlite].
                        Для работы с базой данных используется модуль nodejs -
                        #[a(href="https://github.com/JoshuaWise/better-sqlite3/blob/fa58644ca158d3de6b6ac2227b5d46f97af1f4fd/docs/api.md" target="_blank") better-sqlite3].
                        В качестве основы для Web сервера используется модуль nodejs -
                        #[a(href="https://expressjs.com/ru/" target="_blank") express]. Для
                        формирования пользовательского интерфейса используется
                        #[a(href="https://materializecss.com/" target="_blank") Materialize] и
                        #[a(href="https://jquery.com/" target="_blank") JQuery].

                    h3 Разработка
                    ul.browser-default
                        li.
                            Изменение или получение данных об объектах, счетчиках, действиях, задачах осуществляется
                            через подключение
                            и использование библиотек API из файлов в каталоге проекта rightsWrappers\.
                            Описание содержимого файлов находится #[a(href="#rightsWrappers") ниже].
                            Документация по API находится внутри файлов с исходным кодом
                        li.
                            Описание разработки действий находится на странице помощи
                            #[a(href="/actions/action_editor/help/") Actions\Action editor ].
                        li.
                            Описание разработки сборщиков находится на странице помощи
                            #[a(href="/actions/collector_editor/help/") Actions\Collector editor ]
                        li.
                            Описание разработки лаунчеров находится на странице помощи
                            #[a(href="/actions/launcher_editor/help/") Actions\Launcher editor ]
                        li.
                            Описание разработки средств связи находится на странице помощи
                            #[a(href="/actions/communication_editor/help/") Actions\Communication editor ]
                        li Функции и описание для разработки функций находится в файле проекта lib\calcFunction.js
                        li.
                            Функции и для разработки функций обработки исторических данных находится в файле проекта
                            models_history\historyFunctions.js
                        li.
                            Для смены СУБД конфигурации объектов и их свойств, счетчиков, задач и пользователей в
                            ALEPIZ перепишите все функции в каталоге models_db\*.js
                        li.
                            Для смены СУБД для работы с историческими данными перепишите функции работы с БД в
                            models_history\historyStorageServer.js

                    h3 Процессы ALEPIZ
                    p.
                        Для работы ALEPIZ запускаются серверные процессы, внутри которых работают потоки.
                        Ниже дано описание процессов и потоков.
                    ul.browser-default
                        li alepiz.js - основной процесс, используется для отслеживания работы процесса alepizRunner.js
                        ul.browser-default
                            li.
                                alepizRunner.js - процесс, запускающий и следящий за работой:
                            ul.browser-default
                                li процессов ALEPIZ:
                                ul.browser-default
                                    li historyServer.js  - сервер обслуживания исторических данных
                                    li actionServer.js - сервер запуска действий
                                    li.
                                        activeCollectorServer.js - серверы для получения и обработки данных из активных
                                        или выделенных сборщиков
                                li и потоков ALEPIZ:
                                ul.browser-default
                                    li log.js - сервер логирования
                                    li dbServer.js - сервер БД для внешних интеграций с конфигурацией ALEPIZ
                                    li dbBackup.js - сервер резервного копирования
                                    li actionServer.js - сервер обслуживания задач
                                    li webServer.js - Веб сервер
                                    li debugCounters.js - сервер отладки счетчиков
                    h2 Базы данных
                    p.
                        В системе используется несколько баз данных. При необходимости, действия и сборщики могут так же
                        использовать свои базы данных. Стандартный набор баз данных состоит из:
                    ul.browser-default
                        li База с конфигурацией системы db.db
                        li База с историческими данными и трендами storage.db
                        li База с событиями events.db
                        li Клиентские сессии session.db
                    h4 База с конфигурацией системы: DB.DB
                    p.
                        База служит для хранения информации о текущей конфигурации системы. Ниже приведен список таблиц
                        и предназначение для каждой таблицы
                    ul.browser-default
                        li Объекты и свойства
                        ul.browser-default
                            li objects - список объектов и параметры объектов
                            li interactions - взаимодействия объектов
                            li objectsProperties - свойства объектов
                        li Счетчики и переменные
                        ul.browser-default
                            li counters - список счетчиков и параметры счетчиков
                            li countersGroups - группы счетчиков
                            li countersUnits - единицы измерения
                            li countersParameters - параметры для сборщиков
                            li countersUpdateEvents - события для обновления счетчиков
                            li variables - переменные из исторических данных
                            li variablesExpressions - вычисляемые переменные
                        li objectsCounters - связь между объектами и счетчиками
                        li Задачи
                        ul.browser-default
                            li tasks - список задач и параметры задач
                            li tasksParameters - параметры для действий
                            li tasksActions - действия, используемые в задачах
                            li tasksGroups - группы для задач
                            li taskRunConditions - условия для автоматического выполнения задач
                            li.
                                taskRunConditionsOCIDs - связь условий задач со счетчиками, подключенными к объектам, от
                                которых зависит выполнение задач
                        li Права
                        ul.browser-default
                            li rightsForActions - права на действия
                            li rightsForObject - права на объекты
                            li taskGroupsRoles - права на группа задач
                        li Пользователи и роли
                        ul.browser-default
                            li users - список пользователей
                            li userRoles - связи между пользователями и ролями
                            li roles - список ролей
                            li userCommunication - адреса для связи с пользователями
                            li userCommunicationPriorities - приоритеты для средств связи
                            li userCommunicationPriorityDescription - описание приоритетов средств связи
                    h4 База с историческими данными: HISTORY.DB
                    p.
                        База служит для хранения исторических данных и трендов. Исторические данные могут хранится в виде
                        чисел или строковых значений. Остальные типы данных будут преобразованы к этим двум типам.
                        У одного объекта могут храниться оба типа данных.
                        ALEPIZ автоматически определяет тип данных, преобразует и сохраняет данные в требуемую таблицу.
                        По возможности ALEPIZ преобразует данные из строкового формата в числовой.
                        Логические значения true и false преобразовываются в числовые 1 и 0.
                    p.
                        Тренды могут быть применены только к числовым данным. Тренды это среднее
                        арифметическое для данных одного объекта, собранных в течение определенного для этого тренда
                        времени. Существует несколько трендов, ориентированных на разные интервалы времени с
                        усреднением за 10, 30 и 60 минут. Они служат
                        для быстрого построения графиков и таблиц с данными за большой период времени. Время хранения
                        трендов и исторических данных отличается и настраивается для каждого счетчика с помощью
                        действия Counter settings параметрами Keep history и Keep trends.
                    p.
                        Объектами в исторической базе данных является единица, для которой собираются
                        исторические данные. В терминах базы с конфигурацией ALEPIZ, объектами являются элементы из
                        таблицы objectsCounters, т.е. это связанные друг с другом элементы типа Objects и Counters.
                        База с историческими значениями и база с конфигурацией системы не связаны между собой через
                        механизмы SQLITE. Связь осуществляется на программном уровне.
                        Для ускорения получения данных из БД используется встроенный алгоритм кэширования
                        исторических данных в памяти.
                        В ALEPIZ реализованы функции очистки базы с историческими значениями:
                    ul.browser-default
                        li Система очистки удаленных из ALEPIZ объектов removeZombie
                        li Система очистки исторических данных и трендов houseKeeper
                    h5 Система очистки удаленных из ALEPIZ объектов removeZombie
                    p.
                        Процедура очистки удаленных объектов запускается на старте и потом периодически вместе с
                        houseKeeper. Она удаляет объекты,
                        которых не существует в ALEPIZ. За счет связей внутри базы с историческими данными вместе с
                        объектами удаляются и сами данные.
                    h5 Система очистки исторических данных и трендов Housekeeper
                    p.
                        Процедура очистки исторических данных запускается периодически, через интервал времени,
                        установленный в параметре cacheServiceInterval.
                        Housekeeper удаляет исторические данные старше, чем указано в параметрах счетчика для хранения
                        исторических данных (Keep history). Данные из трендов будут удалены в соответствии
                        с настройкой счетчика для хранения трендов (Keep trends)
                    p.
                        Ниже приведен список таблиц и предназначение для каждой таблицы
                    ul.browser-default
                        li.
                           objects - Список идентификаторов объектов (objectsCounters.id) и требуемое количество
                           данных, хранимых для объекта в кэше
                        li numbers - числовые данные
                        li strings - строковые данные
                        li trends10min - тренды c усреднением данных за 10 мин
                        li trends30min - тренды с усреднением данных за 30 мин
                        li trends60min - тренды с усреднением данных за 60 мин
                        li.
                            config - хранит информацию о том, где остановился процесс Housekeeper для того, чтобы после
                            рестарта ALEPIZ продолжить работу с места остановки.
                    p.
                        Количество таблиц с трендами и их периодичность может быть настроено в
                        models_history\historyStorage.js: var trendsTimeIntervals = [10, 30, 60]; Если база с
                        историческими данными непустая, при изменении периодичности необходимо вручную удалить таблицы
                        с трендами, которые больше не используются.
                    h4 База с событиями: EVENTS.DB
                    p.
                        База с событиями используется сборщиком event-generator и действием Dashboard. Она содержит
                        информацию о событиях, произошедших в инфраструктуре, подсказки по обработке событий и
                        комментарии ним. Ниже приведен список таблиц и предназначение для каждой таблицы
                    ul.browser-default
                        li events - список произошедших событий и их параметры
                        li disabledEvents - временно отключенные события
                        li comments - комментарии к событиям
                        li hints - подсказки по событиям
                    h4 Клиентские сессии: SESSION.DB
                    p.
                        База служит для хранения клиентских сессий и куков. База используется Web сервером ALEPIZ и
                        содержит одну таблицу sessions.
                    h2 Структура проекта
                    p.
                        Каталоги проекта делят проект на логические блоки. Ниже приводится их описание:
                    ul.browser-default
                        li .distr - каталог содержит файлы для формирования установочного пакета
                        li actions - в каталоге находятся действия
                        li bin - каталог содержит обслуживающие скрипты для обслуживания и запускаемый файл alepiz.js
                        li collectors - в каталоге находятся сборщики
                        li communication - в каталоге находятся модули для различных средств связи
                        li config - каталог с файлами конфигурации системы
                        li DB - каталог с базами данных
                        li launchers- в каталоге находятся лаунчеры для запуска действий
                        li lib - основной каталог с кодом ALEPIZ
                        li logs - каталог с лог файлами
                        li.
                            models_db - каталог, содержащий файлы с программным кодом, описывающим  интерфейс к
                            базе с конфигурацией
                            системы db.db. При необходимости можно сменить СУБД, переписав функции в js файлах в этом
                            каталоге
                        li.
                            models_history - каталог, содержащий сервер и API, для взаимодействие с
                            базой с историческими данными: HISTORY.DB. При необходимости можно сменить СУБД, переписав
                            функции в файле historyStorageServer.js
                        li node_modules - модули nodejs, используемые в проекте
                        li private - каталог для ключей HTTPS сервера и шифрования cookies.
                        li public - каталог с файлами для работы для формирования пользовательского интерфейса ALEPIZ
                        li rightsWrappers - каталог с API для работы с базой конфигурации системы db.db
                        li routers - программный код с маршрутизаторами Web сервера
                        li server - сервер для обработки данных, полученных счетчиками
                        li serverActions - сервер управления действиями
                        li serverDB - сервер для работы с конфигурацией ALEPIZ, используется для внешних интеграций
                        li serverDebug - сервер для отладки процесса расчета переменных для счетчиков
                        li serverTask - сервер для отслеживания условий автоматического запуска задач
                        li serverWeb - Веб сервер для взаимодействия с ALEPIZ
                        li utils - утилиты для обслуживания системы
                        li views - каталог с шаблонами pug для работы пользовательского интерфейса ALEPIZ и страницами помощи

                    h4 lib - библиотеки ALEPIZ
                    p.
                        В большинстве файлов есть комментарии к используемым функциям. Постоянно ведется работа по
                        документированию. Предназначение файлов следующее:
                    ul.browser-default
                        li actionConf.js - получение конфигураций для действий
                        li alepizRunner.js
                        li.
                            browserLog.js - обслуживание пользовательского интерфейса работы системы логирования действий
                            (всплывающее окно снизу при выполнении действия)
                        li calc.js - ядро для вычисления функций и выражений в различных модулях ALEPIZ
                        li calcFunctions.js - функции для вычислительного ядра (не исторические).
                        li collectors.js - управление сборщиками: получение, сохранение, проверка параметров, удаление.
                        li communication.js - API для работы со встроенными средствами связи
                        li conf.js - интерфейс для работы с файлами конфигурации в формате JSON
                        li dbBackup.js - клиент-серверная подсистема для резервного копирования баз SQLITE
                        li encrypt.js - функции шифрования
                        li exitHandler.js - обработчик исключений и остановок процессов и потоков
                        li help.js - работа со справочной информацией
                        li installService.js - установщик сервиса ALEPIZ
                        li IPC.js - клиент-серверная система взаимодействия между компонентами ALEPIZ по протоколу TCP/IP
                        li log.js - клиент-серверная подсистема логирования ALEPIZ
                        li proc.js - подсистема запуска, остановки и взаимодействия между процессами ALEPIZ
                        li profiling.js - библиотека, помогающая профилировать код
                        li recode.js - библиотека для перекодировки текста между разными кодовыми страницами
                        li runInThread.js - библиотека для запуска и работы с потоками
                        li.
                            runInThreadChild.js - клиентская часть библиотеки работы с потоками, которая запускается как
                            поток и служит для подключения программного кода, который необходимо запустить в потоке
                        li tasks - работа с задачами
                        li threads.js - еще одна библиотека для запуска и работы с потоками
                        li user - работа с пользователями
                    h4
                        span#rightsWrappers.
                            rightsWrappers - API для работы с объектами, счетчиками, действиями, пользователями и задачами
                    p.
                        API служит для получения и записи данных при работе с объектами счетчиками, действиями,
                        пользователями и задачами.
                        API использует функции из models_db, не взаимодействуя напрямую с БД. Кроме получения и записи
                        данных так же осуществляется проверка прав доступа к объектам и действиям. Для этого во все
                        функции передается имя пользователя. API так же осуществляет проверку корректности всех
                        переданных параметров. В исходных файлах js даны комментарии, которые помогут использовать
                        данное API.
                        Предназначение файлов следующее:
                    ul.browser-default
                        li actions - проверка прав на взаимодействие объектов и пользователя с действиями
                        li counterSaveDB - сохранение и удаление счетчиков (для действия Counter settings)
                        li countersDB - запрос данных о счетчиках
                        li.
                            objectsDB - сохранение и запрос данных об объектах, связях со счетчиками и взаимодействиях
                            между объектами
                        li objectsPropertiesDB - сохранение и запрос данных при работе со свойствами объектов
                        li tasksDB - сохранение и запрос данных при работе с задачами.
                    h4 models_db - работа с базой конфигурации системы SQLITE
                    p.
                        Код ориентирован только на работу с БД. В нем не производится проверок корректности передаваемых,
                        параметров, обработки ошибок и пр. Код написан так, чтобы с минимальными затратами
                        по ресурсам можно было изменить СУБД на любую другую.
                        В каталоге modifiers находятся модули, которые вносят изменения в БД. В корневом каталоге
                        модули предназначены только для выполнения запросов на получение информации из БД.
                        Предназначение файлов следующее:
                    ul.browser-default
                        li.
                            createDB - каталог с файлами, содержащими код по созданию таблиц БД, если  не каких-то
                            таблиц не существует
                        li actionsDB.js - получение и сохранение настроек пользовательского интерфейса для действий.
                        li connect-sqlite3.js - обслуживание сессии web сервера - работа с session.db
                        li modifiers/counterDB.js - сохранение изменений в счетчиках (для действия Counter editor)
                        li countersDB.js - получение данных о счетчиках
                        li countersGroupsDB.js - обслуживание и получение данных о группах счетчиков
                        li countersUnitsDB.js - обслуживание и получение данных о единицах измерения
                        li.
                            db.js - в зависимости от настроек переключает взаимодействие с БД настроек ALEPIZ через сервер
                            БД или напрямую, через файловые операции.
                        li.
                            dbWrapper.js - преобразует функции best-sqlite в формат, совместимый с сервером БД.
                        li objectsDB.js - обслуживание и получение данных об объектах
                        li createObjectList.js - фильтрация, поиск объектов, взаимодействие объектов в системном меню Objects
                        li objectsPropertiesDB.js - обслуживание и получение данных о свойствах объектов
                        li tasksDB.js - обслуживание и получение данных о задачах
                        li transactions.js - организация работы с использованием транзакций, очереди транзакций
                        li usersDB.js - обслуживание и получение данных о пользователях
                        li usersRolesRightsDB.js - работа с ролями пользователей, кеширование ролей
                    h4 models_history - сервер для работы с историческими данными
                    p.
                        Сервер для работы с историческими данными состоит из:
                    ul.browser-default
                        li.
                            Основного процесса history, обрабатывающего запросы и распределяющего их между
                            дочерними потоками БД. Он так же занимается организацией кэширования данных
                        li.
                            Потоков historyStorageServer, обслуживающих запросы на запись в файлы БД. Для резервирования
                            может быть использовано несколько файлов БД.
                        li.
                            Потоков historyStorageServer, выполняющих запросы к БД на получение данных. Количество
                            дочерних процессов равно количеству ядер CPU или устанавливается настройками.
                    p.
                        Предназначение файлов следующее:
                    ul.browser-default
                        li historyClient.js - API для взаимодействия с сервером обслуживания исторических данных
                        li.
                            historyServer.js - основной исполняемый файл сервера обработки исторических данных
                        li.
                            historyCache.js - код, обслуживающий кэш БД и взаимодействующий с процессами, выполняющими
                            запросы к БД
                        li.
                            historyStorage.js - внутреннее API для работы с файлом БД с историческими данными
                        li.
                            historyStorageServer.js - потоки, непосредственно выполняющие файловые операции для
                            получения или сохранения исторических данных в БД.
                        li historyFunctions.js - функции для обработки исторических данных.
                        li historyFunctionsGet.js - получение данных для функций обработки данных.
                        li historyHousekeeper.js - система для удаления старой информации из БД.
                        li historyParameters.js - параметры сервера по умолчанию.