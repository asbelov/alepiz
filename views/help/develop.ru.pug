//
    Copyright © 2020. Alexander Belov. Contacts: <asbel@alepiz.com>
    Created on 2020-5-8 22:48:12
doctype
html(lang="ru" xml:lang="ru" xmlns="http://www.w3.org/1999/xhtml")
    head
        title Информация для разработчиков и администраторов
        link(rel='stylesheet', href='/materialize-css/dist/css/materialize.css')
        link(rel='stylesheet', href='/stylesheets/material-design-icons.css')
        meta(name="viewport" content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no')
        meta(name="author" content="Alexander Belov &lt;asbel@alepiz.com&gt")
        script(src='/materialize-css/dist/js/materialize.js')
        script(src='/javascripts/help.js')
    body
        header
            div.row
                div.col.s12.m10.offset-m1
                    h1 Информация для разработчиков и администраторов ALEPIZ
        main
            div.row
                div.col.s12.m10.offset-m1
                    h2 Описание системы
                    p.
                        ALEPIZ написан на языке JavaScript. С серверной стороны используется nodejs. Код ядра
                        и компонент - асинхронный. Важно поддерживать асинхронность для лучшей производительности системы.
                        Для распараллеливания вычислений используется форк дочерних процессов. Worker Threads не используется,
                        потому что многие модули nodejs, например node-sqlite3, его не поддерживают. Процессы
                        взаимодействуют между собой через протокол TCP/IP, либо через встроенный в nodejs модуль "child_process".
                    p.
                        В качестве базы данных используется встраиваемая база
                        #[a(href="https://www.sqlite.org/" target="_blank") sqlite].
                        Для работы с базой данных используется модуль nodejs -
                        #[a(href="https://github.com/mapbox/node-sqlite3/wiki" target="_blank") node-sqlite3].
                        В качестве основы для Web сервера используется модуль nodejs -
                        #[a(href="https://expressjs.com/ru/" target="_blank") express]. Для
                        формирования пользовательского интерфейса используется
                        #[a(href="https://materializecss.com/" target="_blank") materializecss] и
                        #[a(href="https://jquery.com/" target="_blank") jquery].

                    h3 Разработка
                    ul.browser-default
                        li.
                            Изменение или получение данных об объектах, счетчиках, действиях, задачах осуществляется через подключение
                            и использование библиотек API из файлов в каталоге проекта rightsWrappers\.
                            Описание содержимого файлов находится #[a(href="#rightsWrappers") ниже].
                            Документация по API находится внутри файлов с исходным кодом
                        li.
                            Описание разработки действий находится на странице помощи
                            #[a(href="/actions/action_editor/help/") Actions\Action editor ].
                            С помощью этого действия можно разработать новое действие.
                        li.
                            Описание разработки сборщиков находится на странице помощи
                            #[a(href="/actions/collector_editor/help/") Actions\Collector editor ]
                            С помощью этого действия можно разработать новый сборщик.
                        li.
                            Описание разработки лаунчеров находится на странице помощи
                            #[a(href="/actions/launcher_editor/help/") Actions\Launcher editor ]
                            С помощью этого действия можно разработать новый лаунчер.
                        li.
                            Описание разработки средств связи находится на странице помощи
                            #[a(href="/actions/communication_editor/help/") Actions\Communication editor ]
                            С помощью этого действия можно разработать новое средство связи.
                        li Описание для разработки собственных функций находится в файле проекта lib\calc.js
                        li.
                            Описание для разработки собственных исторических функций находится в файле проекта
                            models_history\historyFunctions.js
                        li.
                            Для смены СУБД для конфигурации ALEPIZ перепишите функции в каталоге models_db\*.js
                        li.
                            Для смены СУБД для работы с историческими данными перепишите функции в
                            models_history\historyStorage.js

                    h3 Процессы ALEPIZ
                    p.
                        Для работы ALEPIZ запускаются различные процессы, выполняющие различные функции.
                        Для увеличения производительности параллельных вычислений, некоторые процессы дублируются по
                        количеству ядер CPU.
                        Ниже дано описание типов процессов. В квадратных скобках процессы, которые дублируются.
                    ul.browser-default
                        li www - основной процесс, запускающий и останавливающий все остальные процессы
                        li log - процесс, отвечающий за логгирование
                        li replicationServer - процесс, отвечающий за репликацию БД
                        li dbBackup - процесс, отвечающий за периодическое резервное копирование БД конфигурации ALEPIZ
                        li history - процесс, для взаимодействия с БД с историческими данными и смарт кэшем
                        ul.browser-default
                            li historyStorage trans - процесс, отвечающий за запись в БД с историческими данными
                            li CPU cores * [historyStorage] - процессы, отвечающие за чтение из БД с историческими данными
                        li taskServer - процесс, запускающий задачи, которые должны выполняться по времени или по условиям
                        li actionServer - процесс, отвечающий за выполнения действий и запись в БД конфигурации ALEPIZ
                        li server - процесс, обрабатывающий очередь по сбору мониторинговых данных
                        ul.browser-default
                            li dynamicLog - процесс, отвечающий за получение, хранение и передачу отладочной информации по счетчикам
                            li activeCollectors * [activeCollector &lt;path&gt; &lt;IP&gt; &lt;port&gt;] - активные сборщики
                            ul.browser-default
                                li ping - процесс активного коллектора ping, который "пингает" удаленные хосты
                            li CPU cores * [childGetCounterValue] - дочерние процессы server для сбора мониторинговых данных и вычисления переменных
                        li webServer - процессы для обслуживания web клиентов
                    h2 Базы данных
                    p.
                        В системе используется несколько баз данных. При необходимости, действия и сборщики могут так же
                        использовать свои базы данных. Стандартный набор баз данных состоит из:
                    ul.browser-default
                        li База с конфигурацией системы db.db
                        li База с историческими значениями и трендами storage.db
                        li База с событиями events.db
                        li Клиентские сессии session.db
                    h4 База с конфигурацией системы: DB.DB
                    p.
                        База служит для хранения информации о текущей конфигурации системы. Ниже приведен список таблиц
                        и предназначение для каждой таблицы
                    ul.browser-default
                        li Объекты и свойства
                        ul.browser-default
                            li objects - список объектов и параметры объектов
                            li interactions - взаимодействия объектов
                            li objectsProperties - свойства объектов
                        li Счетчики и переменные
                        ul.browser-default
                            li counters - список счетчиков и параметры счетчиков
                            li countersGroups - группы счетчиков
                            li countersUnits - единицы измерения
                            li countersParameters - параметры для сборщиков
                            li countersUpdateEvents - события для обновления счетчиков
                            li variables - переменные из исторических данных
                            li variablesExpressions - вычисляемые переменные
                            li objectsCounters - связи между объектами и счетчиками
                        li Задачи
                        ul.browser-default
                            li tasks - список задач и параметры задач
                            li tasksParameters - параметры для действий
                            li tasksActions - действия, используемые в задачах
                            li tasksGroups - группы для задач
                        li Права
                        ul.browser-default
                            li rightsForActions - права на действия
                            li rightsForObject - права на объекты
                        li Пользователи и роли
                        ul.browser-default
                            li users - список пользователей
                            li userRoles - связи между пользователями и ролями
                            li roles - список ролей
                            li auditUsers - соответствия пользовательских сессий и запускаемых действий
                            li userCommunication - адреса для связи с пользователями
                            li userCommunicationPriorities - приоритеты для средств связи
                            li userCommunicationPriorityDescription - описание приоритетов средств связи
                    h4 База с историческими данными: STORAGE.DB
                    p.
                        База служит для хранения исторических данных и трендов. Исторические данные могут быть в виде
                        чисел или строковых значений. Причем у одного объекта могут храниться оба типа данных.
                        ALEPIZ автоматически определяет тип данных и сохраняет данные в требуемую таблицу.
                        Тренды могут быть применены только к числовым значениям данных. Тренды это среднее
                        арифметическое для данных одного объекта, собранных в течение определенного для этого тренда
                        времени. Трендов, ориентированных на разные интервалы времени существует несколько. Они служат
                        для быстрого построения графиков и таблиц с данными за большой период времени.
                        Объектами в исторической базе данных является единица, для которой собираются
                        исторические данные. В терминах базы с конфигурацией ALEPIZ, объектами являются элементы из
                        таблицы objectsCounters, т.е. это связанные друг с другом элементы типа Objects и Counters.
                        База с историческими значениями и база с конфигурацией системы не связаны между собой через
                        механизмы SQLITE. Связь осуществляется на программном уровне.
                        Для ускорения получения данных из БД используется встроенный алгоритм умного кэширования
                        исторических данных в памяти.
                        В ALEPIZ реализованы функции очистки базы с историческими значениями:
                    ul.browser-default
                        li Система очистки удаленных из ALEPIZ объектов removeZombie
                        li Система очистки исторических данных и трендов houseKeeper
                    h5 Система очистки удаленных из ALEPIZ объектов removeZombie
                    p.
                        Система запускается на старте и потом периодически вместе с houseKeeper и удаляет объекты,
                        которых не существует в ALEPIZ. При этом, за счет связей внутри базы с историческими данными,
                        удаляются и сами данные.
                    h5 Система очистки исторических данных и трендов houseKeeper
                    p.
                        Система запускается спустя 30 минут после старта и потом периодически раз в сутки.
                        HouseKeeper удаляет исторические данные старше, чем указано в параметрах счетчика для хранения
                        исторических данных (Keep history).
                        Если периодичность для тренда установлена менее 1 часа, его данные так же будут удалены
                        вместе с историческими данными, в зависимости от настроек счетчика для хранения
                        исторических данных (Keep history).
                        Если периодичность для тренда установлена более 1 часа, его данные будут удалены в соответствии
                        с настройкой счетчика для хранения трендов (Keep trends)
                    p.
                        Ниже приведен список таблиц и предназначение для каждой таблицы
                    ul.browser-default
                        li.
                            objects - Список идентификаторов объектов (objectsCounters.id) и требуемое количество
                            данных, хранимых для объекта в кэше
                        li numbers - числовые данные
                        li strings - строковые данные
                        li trends2min - тренды с периодичностью 2 мин
                        li trends10min - тренды с периодичностью 10 мин
                        li trends30min - тренды с периодичностью 30 мин
                        li trends60min - тренды с периодичностью 60 мин

                    p.
                        Количество таблиц с трендами и их периодичность может быть настроено в
                        models_history\historyStorage.js: var trendsTimeIntervals = [2, 10, 30, 60];
                    h4 База с событиями: EVENTS.DB
                    p.
                        База с событиями используется сборщиком event-generator и действием Dashboard. Она содержит
                        информацию о событиях, произошедших в инфраструктуре и комментарии администратора к
                        событиям. Ниже приведен список таблиц и предназначение для каждой таблицы
                    ul.browser-default
                        li events - список произошедших событий с параметрами
                        li disabledEvents - события, отключенные администратором
                        li comments - комментарии администратора к событиям
                        li hints - информация о событиях, введенная администратором, которая может помочь в его решении

                    h4 Клиентские сессии: SESSION.DB
                    p.
                        База служит для хранения клиентских сессий и куков. База используется Web сервером ALEPIZ и
                        содержит одну таблицу sessions.

                    h2 Структура проекта
                    p.
                        Каталоги проекта делят проект на логические блоки. Ниже приводится их описание:
                    ul.browser-default
                        li .distr - каталог содержит файлы для формирования установочного пакета
                        li actions - в каталоге находятся действия, которые могут подключаться как модули
                        li bin - каталог содержит обслуживающие скрипты и запускаемый файл js
                        li collectors - в каталоге находятся сборщики, которые могут подключаться как модули
                        li communication - в каталоге находятся средства связи, которые могут подключаться как модули
                        li config - каталог с файлом конфигурации системы
                        li DB - каталог с базами данных
                        li launchers- в каталоге находятся лаунчеры, которые могут подключаться как модули
                        li lib - основной каталог с кодом ALEPIZ
                        li logs - каталог с лог файлами
                        li.
                            models_db - каталог, содержащий файлы с кодом, описывающим  интерфейсом к базе с конфигурацией
                            системы db.db. При необходимости можно сменить СУБД, переписав функции в js файлах в этом
                            каталоге
                        li.
                            models_history - каталог, содержащий сервер и API, описывающее взаимодействие с
                            базой с историческими данными: STORAGE.DB. При необходимости можно сменить СУБД, переписав
                            функции в файле historyStorage.js
                        li node_modules - модули nodejs, используемые в проекте
                        li public - каталог с файлами для работы фронтенда системы (javsScripts, CSS, images, HTML)
                        li rightsWrappers - каталог с API для работы с базой конфигурации системы db.db
                        li routers - код с маршрутизаторами Web сервера
                        li utils - утилиты для обслуживания системы
                        li views - каталог с шаблонами pug для работы фронтенда системы и страницами помощи

                    h4 lib - основной каталог с кодом ALEPIZ
                    p.
                        В большинстве файлов есть комментарии к используемым функциям. Постоянно ведется работа по
                        документированию. Предназначение файлов следующее:
                    ul.browser-default
                        li actionClient - клиентская часть подсистемы запуска с действиями
                        li actionConf - получение конфигураций для действий
                        li actionServer - серверная часть подсистемы запуска действий
                        li activeCollector - клиент-серверная подсистема для взаимодействия с активными коллекторами
                        li auditDB - интерфейс для работы с базой аудита
                        li.
                            browserLog - обслуживание пользовательского интерфейса работы системы логирования действий
                            (всплывающее окно снизу при выполнении действия)
                        li calc - вычислительное ядро
                        li calcFunctions - функции для вычислительного ядра (не исторические). можно добавить новые
                        li.
                            childGetCountersValue - дочерние процессы сервера, взаимодействующие со счетчиками.
                            Вычисляют значение переменных счетчиков, собирают данные и взаимодействуют с активными
                            сборщиками, записывают полученные данные в базу через API, вычисляют зависимые счетчики и передают информацию
                            о них серверу. Количество процессов равно количеству ядер CPU. Весь код асинхронный
                        li.
                            collectors - управление сборщиками: получение, сохранение, проверка параметров, удаление.
                        li communication - API для работы со встроенными средствами связи
                        li conf - интерфейс к файлам конфигурации в формате JSON
                        li dbBackup - клиент-серверная подсистема для резервного копирования баз SQLITE
                        li dbReplication - клиент-серверная подсистема для репликации базы данных SQLITE
                        li.
                            dynamicLog - клиент-серверная подсистема для сбора и хранения отладочной информации
                            о процессе вычислении переменных и значений счетчиков.
                        li encrypt - шифрование
                        li exitHandler - обработчик исключений и остановок системы
                        li.
                            help - работа с помощью с поддержкой помощи на различных языках, поиском требуемой страницы на
                            языке пользователя
                        li IPC - клиент-серверная система взаимодействия между компонентами ALEPIZ по протоколу TCP/IP
                        li log - клиент-серверная подсистема логирования ALEPIZ
                        li.
                            logRecords - получение данных из auditDB для обслуживания пользовательского интерфейса
                            работы системы логирования действий (всплывающее окно снизу при выполнении действия)
                        li proc - подсистема запуска, остановки и взаимодействия между компонентами ALEPIZ
                        li profiling - библиотека, помогающая профилировать код
                        li recode - библиотека для перекодировки текста между разными кодировками
                        li replicationServer - клиент-серверная подсистема для организации репликации базы данных SQLITE
                        li.
                            server - сервер для сбора данных со счетчиков. Запускает активные коллекторы и процессы
                            childGetCountersValue. Формирует очередь по сбору данных.
                            Распределяет нагрузку по сбору данных между childGetCountersValue,
                            организовывает кеширования конфигурации
                        li sqlite - открытие базы SQLITE
                        li tasks - работа с задачами
                        li taskServer - клиент-серверная подсистема для обслуживания задач, выполняемых по времени или по условию
                        li user - работа с пользователями
                        li.
                            webServer - Веб сервер для ALEPIZ - клиент-серверная подсистема с использованием кластера.
                            Количество процессов равно количеству ядер CPU. Весь код асинхронный.
                    h4
                        span#rightsWrappers.
                            rightsWrappers - API для работы с объектами, счетчиками, действиями, пользователями и задачами
                    p.
                        API служит для получения и записи данных об объектах счетчиках, действиях, пользователях и задачах
                        Код использует функции из models_db, не взаимодействуя напрямую с БД. Кроме получения и записи
                        данных так же осуществляется проверка прав доступа к объектам и действиям. Для этого во все
                        функции передается имя пользователя. Код так же осуществляет проверку корректности всех
                        переданных параметров. В коде даны комментарии, которые помогут использовать данное API.
                        Предназначение файлов следующее:
                    ul.browser-default
                        li actions - проверка прав на взаимодействие объектов и пользователя с действиями
                        li counterSaveDB - сохранение и удаление счетчиков (для действия Counter settings)
                        li countersDB - запрос данных о счетчиках
                        li objectsDB - сохранение и запрос данных об объектах, связях со счетчиками и взаимодействиях
                        li objectsPropertiesDB - сохранение и запрос данных о свойствах объектов
                        li tasksDB - сохранение и запрос данных из задач.

                    h4 models_db - работа с базой конфигурации системы SQLITE
                    p.
                        Код ориентирован только на работу с БД. Не производится проверок корректности передаваемых,
                        параметров, обработки ошибок и пр. Код написан так, чтобы с относительно минимальными затратами
                        по ресурсам можно было изменить СУБД на любую другую. Предназначение файлов следующее:
                    ul.browser-default
                        li createDB - каталог с файлами, содержащими код по созданию таблиц БД, если  не каких-то таблиц не существует
                        li auditUsersDB - вставка информации о новой сессии в auditUsers
                        li connect-sqlite - обслуживание сессии web сервера - работа с session.db
                        li counterSaveDB - сохранение изменений в счетчиках
                        li countersDB - получение данных о счетчиках
                        li countersGroupsDB - обслуживание и получение данных о группах счетчиков
                        li countersUnitsDB - обслуживание и получение данных о единицах измерения
                        li objectsDB - обслуживание и получение данных об объектах
                        li objectsFilterDB - фильтрация, поиск объектов, взаимодействие объектов в системном меню Objects
                        li objectsPropertiesDB - обслуживание и получение данных о свойствах объектов
                        li tasksDB - обслуживание и получение данных о задачах
                        li transactions - организация транзакционности, очереди транзакций
                        li usersDB - обслуживание и получение данных о пользователях
                        li usersRolesRightsDB - работа с ролями пользователей, кеширование ролей
                    h4 models_history - сервер базы с историческими данными
                    p.
                        Сервер БД состоит из:
                    ul.browser-default
                        li.
                            Основного процесса history, обрабатывающего запросы и распределяющего их между
                            дочерними процессами БД. Он так же занимается организацией умного кэширования данных
                        li.
                            Дочернего процесса historyStorage trans, обслуживающего запросы на запись. Код процесса
                            полностью асинхронный, и процесс всего один, что позволяет достичь максимальной производительности
                            без блокировок БД при записи.
                        li.
                            Дочерних процессов historyStorage, выполняющих запросы к БД на получение данных. Количество
                            дочерних процессов равно количеству ядер CPU. Весь код асинхронный.
                    p.
                        Предназначение файлов следующее:
                    ul.browser-default
                        li history - код, объединяющий и запускающий компоненты сервера БД (клиент-серверная часть)
                        li.
                            historyCache - код, обслуживающий кэш БД и взаимодействующий с процессами, выполняющими
                            запросы к БД
                        li historyFunctions - функции для работы с историческими данными. Можно написать свою
                        li historyHousekeeper - система удаления старой информации из БД
                        li historyParameters - параметры сервера БД
                        li.
                            historyStorage - дочерние процессы (клиент-серверная часть), выполняющие запросы и запись
                            данных в БД. При необходимости замены СУБД, можно переписать данный код
